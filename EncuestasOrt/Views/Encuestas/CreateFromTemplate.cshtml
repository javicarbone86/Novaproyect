@model EncuestasOrt.Models.CrearEncuestaModel

@{
    ViewBag.Title = "Crear encuesta desde plantilla";
}

<link href="@Url.Content("~/Content/MiTemplate/css/Background.css")" rel="stylesheet" type="text/css" />


@using (Html.BeginForm("CreatefromTemplate", "Encuestas"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Crear encuesta desde plantilla</h2>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.TemplateID, "Template", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.encuesta.TemplateID, new SelectList(ViewBag.Plantillas, "Id", "Descripcion"), String.Empty, htmlAttributes: new { @class = "chosen-select-single" })
                @Html.ValidationMessageFor(model => model.encuesta.TemplateID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.MateriaID, "Materia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.encuesta.MateriaID, Model.materias, String.Empty, htmlAttributes: new { @class = "chosen-select-single", style = "width:200px;" })
                 @Html.ValidationMessageFor(model => model.encuesta.MateriaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.Curso, "Curso", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.encuesta.Curso, Model.cursos, String.Empty, htmlAttributes: new { @class = "chosen-select-single", style = "width:200px;" })
                @Html.ValidationMessageFor(model => model.encuesta.Curso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.ClaveAcceso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.encuesta.ClaveAcceso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.encuesta.ClaveAcceso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.encuesta.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.encuesta.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.FechaHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!--Html.EditorFor(model => model.FechaHora, new { htmlAttributes = new { class = "form-control" } })-->
                @Html.DisplayFor(model => model.encuesta.FechaHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.encuesta.FechaHora, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.encuesta.EsTemplate)


        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.encuesta.Estado)
                    @Html.ValidationMessageFor(model => model.encuesta.Estado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.encuesta.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.encuesta.Cantidad, new { htmlAttributes = new { min = 1, required = "required" } })
                    @Html.ValidationMessageFor(model => model.encuesta.Cantidad, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-success pull" />
                <input type="button" value="Cancelar" class="btn btn-default pull" id="cancelCreate" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")


    @Styles.Render("~/Content/chosen.css")
    @Scripts.Render("~/Scripts/chosen.jquery.min.js")



    <script type="text/javascript">
        $(document).ready(function () {
            $(".chosen-select-single").chosen();
            $(".chosen-select-multiple").chosen();
            $(".chosen-group-select").chosen();
            $(".chosen-group-multiple-select").chosen();


            $('#cancelCreate').click(function () {
                parent.history.back();
                return false;
            });

        });
    </script>
}
